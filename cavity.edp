// Create the boundaries of the computational domain
border a0(t=0,1) { x= 5; y= 1+2*t ;}
border a1(t=0,1) { x=5-2*t; y= 3 ;} 
border a2(t=0,1) { x= 3-2*t; y=3-2*t ;}
border a3(t=0,1) { x= 1-t; y= 1 ;} 
border a4(t=0,1) { x= 0; y= 1-t ;} 
border a5(t=0,1) { x= t; y= 0 ;} 
border a6(t=0,1) { x= 1+4*t; y= t ;}

// Plot the geometry of the computational domain
plot( a0(20) + a1(20)+ a2(20) +  a3(20) + a4(20) + a5(20) + a6(20),wait=1,ps="domain.eps" );

// Generate a mesh of the domain using 20 elements per edge
mesh Th = buildmesh( a0(20) + a1(20) + a2(20) + a3(20) + a4(20) + a5(20) + a6(20) );

// Plot the mesh
plot(Th, wait=1, ps="mesh.eps");

// Define the approximation space based on linear elements
fespace Vh(Th,P1);
Vh p,q;

// Solve the variational formulation for the Helmholtz equation
real k = 10;
solve cavity(p,q)=int2d(Th)(k*k*p*q - dx(p)*dx(q) - dy(p)*dy(q)) - int1d(Th,a4)(q);

// Plot the result
plot(p, fill=1);
